plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'java'
}

group = 'com.kudl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    webflux
//    implementation 'org.springframework.boot:spring-boot-starter-webflux'

//    reactive redis
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

//    aws sqs start
    implementation 'org.springframework.cloud:spring-cloud-aws-autoconfigure:2.2.5.RELEASE'
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.924')
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.924'
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging:2.2.5.RELEASE'
//    aws sqs end

//    graphql start
//    implementation 'com.graphql-java:graphql-java:11.0'
//    implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.0'
    implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.5'
//    graphql end

//    okta start
//    implementation 'com.okta.spring:okta-spring-boot-starter:2.0.1'
//    okta end

    compile("com.querydsl:querydsl-jpa:4.4.0")
    compile("com.querydsl:querydsl-apt:4.4.0")
    compile 'mysql:mysql-connector-java'
    compile 'io.reactivex.rxjava2:rxjava:2.2.6'

    implementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

def generatedSourcesDir = file("${buildDir}/generated/querydsl")

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDir generatedSourcesDir
        }
    }
}

querydsl {
    querydslSourcesDir = relativePath(generatedSourcesDir)
    library = "com.querydsl:querydsl-apt"
    jpa = true
}

test {
    useJUnitPlatform()
}
